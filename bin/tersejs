#!/bin/env bash

echo "Compiling..."


OPTIND=1         # Reset in case getopts has been used previously in the shell.

outFile=""
show_help()
{
cat << EOF
help will be here
EOF
}

sweetOpts=""
compile=false
preProcessOnly=false
onlySjs=false
while getopts "h?o:s:cjp" opt; do
    case "$opt" in
    h|\?)
        show_help
        exit 0
        ;;
    o)  outFile="$OPTARG"
        ;;
    c)  compile=true
        ;;
    s)  sweetOpts="$OPTARG"
        ;;
    p)  preProcessOnly=true
        ;;
    j)  onlySjs=true
        ;;
    esac
done

shift $((OPTIND-1))

[ "$1" = "--" ] && shift
inFile=$1
if $compile; then
   outFile=$(basename $inFile | cut -d. -f1).js
fi

macroModNames=object,autovar,do,invoke,conditionals,self,pipe,lambda_chop,loop,eq,partial,cascading,reverse_pipe,precedence

thisDir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd -P )
macroDir=$thisDir/../macros
#macroIncludes=$(eval "echo -m\ $macroDir/{"$macroModNames"}.sjs")
macroPaths=$(eval "echo $macroDir/{"$macroModNames"}.sjs")
cat $macroPaths > "$macroDir/combined.sjs"
macroIncludes=" -m $macroDir/combined.sjs"

indentToBraces=$thisDir/indent_to_braces

indentToBraces="node $thisDir/../dist/indent_to_braces.jsexe/all.js"
postProcess="node $thisDir/../dist/post_process.jsexe/all.js"
#indentToBraces=$thisDir/indent_to_braces
#postProcess=$thisDir/post_process

sjscmd(){  
   #sjs --readable-names $sweetOpts $macroIncludes <(cat $inFile | $thisDir/preserve_empty_lines | $thisDir/indent_to_braces ) | $thisDir/preserve_empty_lines -r | $thisDir/post_process
   sjs --readable-names $sweetOpts $macroIncludes <(cat $inFile |  $indentToBraces ) | $postProcess
}

cmd(){
   if $preProcessOnly; then
      #cat $inFile | $thisDir/preserve_empty_lines | $thisDir/indent_to_braces
      cat $inFile | $thisDir/indent_to_braces
   else
      if $onlySjs; then
         #sjs --readable-names $sweetOpts $macroIncludes $inFile | $thisDir/preserve_empty_lines -r | $thisDir/post_process
         sjs --readable-names $sweetOpts $macroIncludes $inFile | $postProcess
      else
        sjscmd
      fi
   fi
}

if [ -n "$outFile" ]; then
   errors=$( { cmd | cat > "$outFile" ;} 2>&1 )
   if [ -z "$errors" ]; then
      echo "Success!"
   else
      echo "Failed:"
      echo ""
      echo "$errors"
      echo -n "setTimeout(function(){var e=document.createElement('p');e.innerHTML='" > "$outFile"
      echo -n "$errors" | sed ':a;N;$!ba;s/\n/\<\/br\>/g'  >> "$outFile"
      echo "';var b = document.getElementsByTagName('body')[0];b.insertBefore(e, b.children[0]);}, 200);" >> "$outFile"

      #echo -n "console.log('"> "$outFile"
      #echo -n "$errors" | sed ':a;N;$!ba;s/\n/\\n/g'  >> "$outFile"
      #echo "');" >> "$outFile"
   fi
else
   cmd
fi

