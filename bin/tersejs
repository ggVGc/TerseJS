#!/bin/env bash

OPTIND=1         # Reset in case getopts has been used previously in the shell.

outFile=""
show_help()
{
cat << EOF
help will be here
EOF
}

sweetOpts=""
compile=false
preProcessOnly=false
while getopts "h?o:s:cp" opt; do
    case "$opt" in
    h|\?)
        show_help
        exit 0
        ;;
    o)  outFile=$OPTARG
        ;;
    c)  compile=true
        ;;
    s)  sweetOpts=$OPTARG
        ;;
    p)  preProcessOnly=true
        ;;
    esac
done

shift $((OPTIND-1))

[ "$1" = "--" ] && shift
inFile=$1
if $compile; then
   outFile=$(basename $inFile | cut -d. -f1).js
fi

macroModNames=autovar,do,func_apply,conditionals,self,pipe,lambda_chop,scope

thisDir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd -P )
macroDir=$thisDir/../macros
macroIncludes=$(eval "echo -m\ $macroDir/{"$macroModNames"}.sjs")


cmd(){
   if $preProcessOnly; then
      cat $inFile | $thisDir/preserve_empty_lines | $thisDir/indent_to_braces
   else
      sjs --readable-names $macroIncludes <(cat $inFile | $thisDir/preserve_empty_lines | $thisDir/indent_to_braces ) $sweetOpts $inFile | $thisDir/preserve_empty_lines -r | $thisDir/post_process
   fi
}

if [ -n "$outFile" ]; then
   cmd | cat > "$outFile"
else
   cmd
fi

